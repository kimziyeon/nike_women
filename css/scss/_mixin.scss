$flex-map: (
    s: flex-start,
    e: flex-end,
    sb: space-between,
    sa: space-around,
    st: stretch,
    c: center,
);

@function _get-flex-value($key) {
    @return map-get($flex-map, $key);
}

@mixin flexbox($jc: center, $ai: center) {
    display: flex;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($jc);
    @content;
}

@mixin inline-flexbox($jc: center, $ai: center) {
    display: inline-flex;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($jc);
}

@mixin column-flexbox($jc: center, $ai: center) {
    display: flex;
    flex-direction: column;
    align-items: _get-flex-value($ai);
    justify-content: _get-flex-value($jc);
}


.list {
    @include flexbox(end, stretch);
}



@mixin pos-center-x($type: absolute) {
    @if ($type ==fixed or $type ==absolute) {
        position: $type;
        top: 50%;
        transform: translateX(-50%);
    }
}

@mixin pos-center-y($type: absolute) {
    @if ($type ==fixed or $type ==absolute) {
        position: $type;
        top: 50%;
        transform: translateY(-50%);
    }
}

@mixin pos-center($type: absolute) {
    @if ($type ==fixed or $type ==absolute) {
        position: $type;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}


$mob-breakpoint: 430px;
$tab-breakpoint: 768px;

@mixin res($screen) {
    @if ($screen =='mob') {
        @media screen and (max-width: $mob-breakpoint) {
            @content;
        }
    }

    @if ($screen =='tab') {
        @media screen and (max-width: $tab-breakpoint) {
            @content;
        }
    }

    @if ($screen) {
        @media screen and (max-width: $screen) {
            @content;
        }
    }
}